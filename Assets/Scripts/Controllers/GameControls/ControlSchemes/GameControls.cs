//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/Controllers/GameControls/ControlSchemes/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""TouchInput"",
            ""id"": ""83b0a702-3d20-4c1d-85da-e2b1105b3f92"",
            ""actions"": [
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b95f2d87-3d44-4d42-b41e-19498768dfef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerClick"",
                    ""type"": ""Button"",
                    ""id"": ""f9e6ee71-80fb-438c-82c2-59953b554c6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrolledUp"",
                    ""type"": ""Button"",
                    ""id"": ""8d42b8cc-62a2-4558-b5bd-b1c5bfe32f8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrolledDown"",
                    ""type"": ""Button"",
                    ""id"": ""994459cd-2906-4f41-8ca8-ad8f73849ad7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc86d719-af7a-4feb-a011-f6585e66b045"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b2bcdf3-6be0-4306-b213-207659e64ef9"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37a31609-f2e0-4531-b531-2b79bc820eb1"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be2bb755-fa13-429f-be41-2a7028d557b4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d36fc216-cc0e-4562-b69e-c4292a71d7a5"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3fb899d-29f6-4f35-bc7c-bb3b0fdb2e8d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78d6f786-8147-4b5e-b3b4-34b93138e1da"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38132423-3e34-4f33-a31b-515ae89273c8"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e508b49-f7bf-4d6f-abe8-851ce003ff81"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cad3f72-5ce5-498f-bf96-7676ad13ab93"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrolledDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // TouchInput
        m_TouchInput = asset.FindActionMap("TouchInput", throwIfNotFound: true);
        m_TouchInput_PointerPosition = m_TouchInput.FindAction("PointerPosition", throwIfNotFound: true);
        m_TouchInput_PointerClick = m_TouchInput.FindAction("PointerClick", throwIfNotFound: true);
        m_TouchInput_ScrolledUp = m_TouchInput.FindAction("ScrolledUp", throwIfNotFound: true);
        m_TouchInput_ScrolledDown = m_TouchInput.FindAction("ScrolledDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // TouchInput
    private readonly InputActionMap m_TouchInput;
    private List<ITouchInputActions> m_TouchInputActionsCallbackInterfaces = new List<ITouchInputActions>();
    private readonly InputAction m_TouchInput_PointerPosition;
    private readonly InputAction m_TouchInput_PointerClick;
    private readonly InputAction m_TouchInput_ScrolledUp;
    private readonly InputAction m_TouchInput_ScrolledDown;
    public struct TouchInputActions
    {
        private @GameControls m_Wrapper;
        public TouchInputActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PointerPosition => m_Wrapper.m_TouchInput_PointerPosition;
        public InputAction @PointerClick => m_Wrapper.m_TouchInput_PointerClick;
        public InputAction @ScrolledUp => m_Wrapper.m_TouchInput_ScrolledUp;
        public InputAction @ScrolledDown => m_Wrapper.m_TouchInput_ScrolledDown;
        public InputActionMap Get() { return m_Wrapper.m_TouchInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchInputActions set) { return set.Get(); }
        public void AddCallbacks(ITouchInputActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchInputActionsCallbackInterfaces.Add(instance);
            @PointerPosition.started += instance.OnPointerPosition;
            @PointerPosition.performed += instance.OnPointerPosition;
            @PointerPosition.canceled += instance.OnPointerPosition;
            @PointerClick.started += instance.OnPointerClick;
            @PointerClick.performed += instance.OnPointerClick;
            @PointerClick.canceled += instance.OnPointerClick;
            @ScrolledUp.started += instance.OnScrolledUp;
            @ScrolledUp.performed += instance.OnScrolledUp;
            @ScrolledUp.canceled += instance.OnScrolledUp;
            @ScrolledDown.started += instance.OnScrolledDown;
            @ScrolledDown.performed += instance.OnScrolledDown;
            @ScrolledDown.canceled += instance.OnScrolledDown;
        }

        private void UnregisterCallbacks(ITouchInputActions instance)
        {
            @PointerPosition.started -= instance.OnPointerPosition;
            @PointerPosition.performed -= instance.OnPointerPosition;
            @PointerPosition.canceled -= instance.OnPointerPosition;
            @PointerClick.started -= instance.OnPointerClick;
            @PointerClick.performed -= instance.OnPointerClick;
            @PointerClick.canceled -= instance.OnPointerClick;
            @ScrolledUp.started -= instance.OnScrolledUp;
            @ScrolledUp.performed -= instance.OnScrolledUp;
            @ScrolledUp.canceled -= instance.OnScrolledUp;
            @ScrolledDown.started -= instance.OnScrolledDown;
            @ScrolledDown.performed -= instance.OnScrolledDown;
            @ScrolledDown.canceled -= instance.OnScrolledDown;
        }

        public void RemoveCallbacks(ITouchInputActions instance)
        {
            if (m_Wrapper.m_TouchInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchInputActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchInputActions @TouchInput => new TouchInputActions(this);
    public interface ITouchInputActions
    {
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnPointerClick(InputAction.CallbackContext context);
        void OnScrolledUp(InputAction.CallbackContext context);
        void OnScrolledDown(InputAction.CallbackContext context);
    }
}
